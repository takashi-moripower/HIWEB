<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">


<sqlMap namespace="tuchi">
	<resultMap id="tuchiResult"
		class="logistics.system.project.tuchi.Entity.TuchiEntity">
		<result column="TUCHI_ID" jdbcType="INTEGER" property="tuchiId" />
		<result column="USER_ID" jdbcType="CHAR" property="userId" />
		<result column="EMAIL" jdbcType="CHAR" property="email" />
		<result column="USER_NM" jdbcType="CHAR" property="userNm" />
		<result column="NINUSI_CD" jdbcType="CHAR" property="ninusiCd" />
		<result column="DATE_START" property="dateStart" />
		<result column="DATE_END" property="dateEnd" />
		<result column="TITLE" jdbcType="VARCHAR" property="title" />
		<result column="MAIL_COUNT" jdbcType="INTEGER" property="mailCount" />
		<result column="MAIL_COUNT_DAY" jdbcType="INTEGER" property="mailCountDay" />
	</resultMap>

	<sql id="TuchiSelectDefault">
		SELECT
			TUCHI_ID,
			T_TUCHI.USER_ID as USER_ID,
			T_TUCHI.EMAIL as EMAIL,
			M_USER.USER_NM as USER_NM,
			NINUSI_CD,
			DATE_START,
			DATE_END,
			TITLE,
			MAIL_COUNT,
			MAIL_COUNT_DAY
		FROM T_TUCHI
		JOIN M_USER ON M_USER.USER_ID = T_TUCHI.USER_ID
	</sql>

	<select id="getTuchiByCd" parameterClass="java.lang.Integer"
		resultMap="tuchiResult">
		<include refid="TuchiSelectDefault" />
		where TUCHI_ID = #value#
	</select>

	<select id="getTuchiByUser" parameterClass="java.lang.String"
		resultMap="tuchiResult">
		<include refid="TuchiSelectDefault" />
		<dynamic>
			<isNotEmpty>
				WHERE T_TUCHI.USER_ID = #value#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="getNextTuchiId" resultClass="java.lang.Integer">
		SELECT
			MAX(TUCHI_ID) + 1
		FROM T_TUCHI
	</select>

	<select id="getMatchTuchi" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
SELECT
	T_TUCHI.TUCHI_ID
FROM T_TUCHI
	JOIN T_ANKEN ON T_ANKEN.ANKEN_ID = #value#
	JOIN T_SYUKA ON T_SYUKA.ANKEN_ID = T_ANKEN.ANKEN_ID
	JOIN T_ANKEN_ORDER ON T_ANKEN_ORDER.ANKEN_ID = T_ANKEN.ANKEN_ID
	LEFT OUTER JOIN T_PREF_TUCHI ON T_PREF_TUCHI.TUCHI_ID = T_TUCHI.TUCHI_ID
	LEFT OUTER JOIN M_PREF ON T_PREF_TUCHI.PREF_CD = M_PREF.PREF_CD
WHERE
	T_ANKEN_ORDER.ANKEN_STATUS = 10 AND
    T_SYUKA.SYUKA_DAY >= DATE_FORMAT( T_TUCHI.DATE_START , '%Y%m%d' ) AND
    T_SYUKA.SYUKA_DAY <= DATE_FORMAT( T_TUCHI.DATE_END , '%Y%m%d' ) AND
    (
		M_PREF.PREF_NM IS NULL OR(
			M_PREF.PREF_NM = T_SYUKA.PREF_NM AND(
				NOT EXISTS ( SELECT * FROM T_CITY_TUCHI WHERE T_CITY_TUCHI.TUCHI_ID = T_TUCHI.TUCHI_ID ) OR(
					EXISTS(
						SELECT *
						FROM T_CITY_TUCHI
						JOIN  M_CITY ON M_CITY.CITY_CD = T_CITY_TUCHI.CITY_CD
						WHERE T_CITY_TUCHI.TUCHI_ID = T_TUCHI.TUCHI_ID AND
						T_SYUKA.CITY_NM LIKE CONCAT( M_CITY.CITY_NM , "%")
					)
				)
			)
		)
    )AND
   	(
   		NOT EXISTS ( SELECT * FROM T_SYASYU_TUCHI WHERE T_SYASYU_TUCHI.TUCHI_ID = T_TUCHI.TUCHI_ID ) OR
   		EXISTS (
   			SELECT *
   			FROM T_SYASYU_TUCHI
   			JOIN T_TRUCK ON T_TRUCK.SYASYU_CD = T_SYASYU_TUCHI.SYASYU_CD
   			WHERE T_SYASYU_TUCHI.TUCHI_ID = T_TUCHI.TUCHI_ID AND T_TRUCK.ANKEN_ID = T_SYUKA.ANKEN_ID
   		)
   	) AND
   	(
   		NOT EXISTS ( SELECT * FROM T_TRUCK_OP_TUCHI WHERE T_TRUCK_OP_TUCHI.TUCHI_ID = T_TUCHI.TUCHI_ID ) OR
   		EXISTS (
   			SELECT *
   			FROM T_TRUCK_OP_TUCHI
   			JOIN T_TRUCK ON T_TRUCK.OP_LIST LIKE CONCAT("%",T_TRUCK_OP_TUCHI.OP_CD,"%" )
   			WHERE T_TRUCK_OP_TUCHI.TUCHI_ID = T_TUCHI.TUCHI_ID
   				AND T_TRUCK.ANKEN_ID = T_SYUKA.ANKEN_ID
   		)
   	)
   	ORDER BY T_SYUKA.SYUKA_DAY ASC
       	]]>
	</select>
	<select id="debugSelect" resultClass="java.lang.String" parameterClass="java.lang.String">
		$value$
	</select>

	<select id="getTuchiDestEmails" resultClass="java.lang.String" parameterClass="java.util.Map">
	<![CDATA[
		SELECT
			T_TUCHI.EMAIL
		FROM
			T_TUCHI_QUEUE
		JOIN
			T_TUCHI ON T_TUCHI_QUEUE.TUCHI_ID = T_TUCHI.TUCHI_ID
		JOIN
			M_USER ON T_TUCHI.USER_ID = M_USER.USER_ID
		JOIN
			M_COMPANY ON M_USER.COMPANY_CD = M_COMPANY.COMPANY_CD
		WHERE(
			CASE WHEN M_COMPANY.DISP_DL IS NULL THEN
				(CURRENT_TIMESTAMP - INTERVAL #defaultDelay# MINUTE)
			ELSE
				(CURRENT_TIMESTAMP - INTERVAL M_COMPANY.DISP_DL MINUTE)
			END
		) > T_TUCHI_QUEUE.CREATED
		GROUP BY
			T_TUCHI.EMAIL
		LIMIT
			#limit#
	]]>


	</select>

	<select id="getTuchiQueueByEmail" resultClass="java.util.HashMap" parameterClass="java.util.Map">
		<![CDATA[
			SELECT
				T_TUCHI_QUEUE.*
			FROM
				T_TUCHI_QUEUE
			JOIN
				T_TUCHI ON T_TUCHI_QUEUE.TUCHI_ID = T_TUCHI.TUCHI_ID
			JOIN
				T_ANKEN ON T_TUCHI_QUEUE.ANKEN_ID = T_ANKEN.ANKEN_ID
			JOIN
				M_USER ON T_TUCHI.USER_ID = M_USER.USER_ID
			JOIN
				M_COMPANY ON M_USER.COMPANY_CD = M_COMPANY.COMPANY_CD
			WHERE
				(
					CASE WHEN M_COMPANY.DISP_DL IS NULL THEN
						(CURRENT_TIMESTAMP - INTERVAL #defaultDelay# MINUTE)
					ELSE
						(CURRENT_TIMESTAMP - INTERVAL M_COMPANY.DISP_DL MINUTE)
					END
				) > T_TUCHI_QUEUE.CREATED AND
				T_TUCHI.EMAIL = #email# AND
				T_TUCHI_QUEUE.STATUS <> -1
			GROUP BY
				T_TUCHI_QUEUE.ANKEN_ID
			ORDER BY
				T_TUCHI_QUEUE.CREATED
       	]]>
	</select>

	<select id="getAnkenForTuchi" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		SELECT
			T_ANKEN.JUTU_KG AS JUTU_KG,
			T_SYUKA.SYUKA_DAY AS DAY_FROM,
			T_SYUKA.SYUKA_TIME AS TIME_FROM,
			T_SYUKA.PREF_NM AS PREF_FROM,
			T_SYUKA.CITY_NM AS CITY_FROM,
			T_SYUKA.ADDR_NM AS ADDR_FROM,
			T_NOHIN.NOHIN_DAY AS DAY_TO,
			T_NOHIN.NOHIN_TIME AS TIME_TO,
			T_NOHIN.PREF_NM AS PREF_TO,
			T_NOHIN.CITY_NM AS CITY_TO,
			T_NOHIN.ADDR_NM AS ADDR_TO,
			(SELECT COUNT(*) FROM T_SYUKA AS CS WHERE CS.ANKEN_ID = T_ANKEN.ANKEN_ID) AS COUNT_FROM,
			(SELECT COUNT(*) FROM T_NOHIN AS CN WHERE CN.ANKEN_ID = T_ANKEN.ANKEN_ID) AS COUNT_TO,
			T_TRUCK.YOSAN_MN AS YOSAN_MN
		FROM
			T_ANKEN
		JOIN
			T_SYUKA ON T_SYUKA.ANKEN_ID = T_ANKEN.ANKEN_ID
		JOIN
			T_NOHIN ON T_NOHIN.ANKEN_ID = T_ANKEN.ANKEN_ID
		JOIN
			T_TRUCK ON T_TRUCK.ANKEN_ID = T_ANKEN.ANKEN_ID
		WHERE
			T_ANKEN.ANKEN_ID = #ankenId#
		ORDER BY
			T_NOHIN.NOHIN_DAY ASC, T_NOHIN.NOHIN_TIME ASC , T_SYUKA.SYUKA_DAY ASC , T_SYUKA.SYUKA_TIME ASC
		LIMIT 1
	</select>

	<update id="updateTuchi" parameterClass="logistics.system.project.tuchi.Entity.TuchiEntity">
		UPDATE
		T_TUCHI
		SET
			TITLE =	#title#,
			NINUSI_CD = #ninusiCd#,
			EMAIL = #email#,
			DATE_START = #dateStart#,
			DATE_END = #dateEnd#
		WHERE TUCHI_ID = #tuchiId#
		AND USER_ID = #userId#
	</update>

	<update id="tuchiIncreaseCount" parameterClass="java.lang.Integer">
		UPDATE
			T_TUCHI
		SET
			MAIL_COUNT = MAIL_COUNT+1,
			MAIL_COUNT_DAY = MAIL_COUNT_DAY+1
		WHERE
			TUCHI_ID = #value#
	</update>
	<update id="setQueueStatus" parameterClass="java.util.Map">
		UPDATE
			T_TUCHI_QUEUE
		SET
			STATUS = #status#
		WHERE
			ID = #id#
	</update>
	<update id="clearTuchiDaylyCount" >
		UPDATE
			T_TUCHI
		SET
			MAIL_COUNT_DAY = 0
	</update>

	<insert id="insertTuchi" parameterClass="logistics.system.project.tuchi.Entity.TuchiEntity">
		INSERT
		INTO T_TUCHI (
			TUCHI_ID,
			USER_ID,
			EMAIL,
			NINUSI_CD,
			TITLE,
			DATE_START,
			DATE_END
		)
		VALUES(
			#tuchiId#,
			#userId#,
			#email#,
			#ninusiCd#,
			#title#,
			#dateStart#,
			#dateEnd#
		)
	</insert>
	<insert id="addTuchiQueue" parameterClass="java.util.Map">

   	INSERT
		INTO T_TUCHI_QUEUE( ANKEN_ID , TUCHI_ID , CREATED)
		SELECT * FROM (SELECT #ankenId#,#tuchiId#,#created#) as buffer
		WHERE NOT EXISTS (
			SELECT *
				FROM T_TUCHI_QUEUE
				JOIN T_TUCHI ON T_TUCHI.TUCHI_ID = T_TUCHI_QUEUE.TUCHI_ID
			WHERE
				ANKEN_ID = #ankenId# AND
				T_TUCHI.EMAIL = ( SELECT EMAIL FROM T_TUCHI WHERE TUCHI_ID = #tuchiId# )
		) LIMIT 1
	</insert>

    <delete id="deleteTuchi" parameterClass="java.lang.Integer">
    	DELETE
      		FROM T_TUCHI
       	WHERE
       		TUCHI_ID = #value#
    </delete>

    <delete id="removeTuchiQueue" parameterClass="java.lang.Long">
		DELETE
			T_TUCHI_QUEUE
		FROM
			T_TUCHI_QUEUE
		WHERE
			T_TUCHI_QUEUE.ID = #value#
    </delete>


</sqlMap>
